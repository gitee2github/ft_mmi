# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Copyright (c) Huawei Technologies Co., Ltd. 2019-2019. All rights reserved.
import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/multimodalinput/input/multimodalinput_mini.gni")
config("libmmi_virtual_device_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "//commonlibrary/c_utils/base/include",
    "//util/common/include",
  ]
}

config("virtual_device_public_config") {
  include_dirs = [
    "include",
    "//commonlibrary/c_utils/base/include",
  ]
}

ohos_source_set("libmmi-virtual-device") {
  sources = [
    "src/virtual_device.cpp",
    "src/virtual_finger.cpp",
    "src/virtual_gamepad.cpp",
    "src/virtual_joystick.cpp",
    "src/virtual_keyboard.cpp",
    "src/virtual_keyboard_consumer_ctrl.cpp",
    "src/virtual_keyboard_ext.cpp",
    "src/virtual_keyboard_sys_ctrl.cpp",
    "src/virtual_knob.cpp",
    "src/virtual_knob_consumer_ctrl.cpp",
    "src/virtual_knob_mouse.cpp",
    "src/virtual_knob_sys_ctrl.cpp",
    "src/virtual_mouse.cpp",
    "src/virtual_pen.cpp",
    "src/virtual_pen_keyboard.cpp",
    "src/virtual_pen_mouse.cpp",
    "src/virtual_remote_control.cpp",
    "src/virtual_single_finger.cpp",
    "src/virtual_single_touchscreen.cpp",
    "src/virtual_stylus.cpp",
    "src/virtual_touchpad.cpp",
    "src/virtual_touchscreen.cpp",
    "src/virtual_trackball.cpp",
    "src/virtual_trackpad.cpp",
    "src/virtual_trackpad_mouse.cpp",
    "src/virtual_trackpad_sys_ctrl.cpp",
  ]

  configs = [ ":libmmi_virtual_device_config" ]

  part_name = "input"
  subsystem_name = "multimodalinput"
  external_deps = [ "c_utils:utils" ]
}

ohos_executable("vuinput") {
  sources = [ "src/mmi_virtual_device_main.cpp" ]

  configs = [ ":virtual_device_public_config" ]

  deps = [
    "//foundation/multimodalinput/input/patch/diff_libinput_mmi:libinput-third-mmi",
    "//foundation/multimodalinput/input/tools/vuinput:libmmi-virtual-device",
  ]

  install_enable = true
  part_name = "input"
  subsystem_name = "multimodalinput"
}

module_output_path = "multimodalinput/unit_out"
ohos_unittest("ut-virtual-device-out") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/tools/vuinput/include",
    "//commonlibrary/c_utils/base/include",
    "${mmi_path}/util/common",
    "${mmi_path}/util/common/include",
    "${mmi_path}/util/network",
    "${mmi_path}/util/network/include",
    "${mmi_path}/util/socket",
    "${mmi_path}/util/socket/include",
    "$root_out_dir/diff_libinput_mmi/export_include",
  ]

  sources = [ "test/virtual_device_test.cpp" ]

  configs = [ ":virtual_device_public_config" ]

  deps = [
    "${mmi_path}/tools/vuinput:libmmi-virtual-device",
    "${mmi_path}/util:libmmi-util",
    "//foundation/multimodalinput/input/patch/diff_libinput_mmi:libinput-third-mmi",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
  ]
}
